{"ast":null,"code":"var _jsxFileName = \"/home/ruchitha/redux-contact-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as contactAction from './redux/actions/contactAction';\nimport Contact from './components/organisms/_contact-form/_contact-form';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      name: ''\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let contact = {\n      name: this.state.name\n    };\n    this.setState({\n      name: ''\n    });\n    this.props.createContact(contact);\n  }\n\n  listView(data, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: \"list-group-item clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, data.name, \"  \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.deleteContact(e, index),\n      className: \"btn btn-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 26\n      }\n    }, \"Remove\")))));\n  }\n\n  deleteContact(e, index) {\n    e.preventDefault();\n    this.props.deleteContact(index);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \" Contacts Application\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Add Contact Form\"), /*#__PURE__*/React.createElement(Contact, {\n      props: this.props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    contacts: state.contacts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createContact: contact => dispatch(contactAction.createContact(contact)),\n    deleteContact: index => dispatch(contactAction.deleteContact(index))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/ruchitha/redux-contact-app/src/App.js"],"names":["React","Component","connect","contactAction","Contact","App","constructor","props","handleChange","bind","handleSubmit","state","name","e","setState","target","value","preventDefault","contact","createContact","listView","data","index","deleteContact","render","mapStateToProps","ownProps","contacts","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as contactAction from './redux/actions/contactAction';\nimport Contact from './components/organisms/_contact-form/_contact-form';\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n     \n    this.state = {\n      name: ''\n    }\n  }\n\n  handleChange(e){\n    this.setState({\n      name: e.target.value\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    let contact = {\n      name: this.state.name\n    }\n    this.setState({\n      name: ''\n    });\n    this.props.createContact(contact);\n  }\n\n  listView(data, index){\n    return (\n      <div>\n     \n      <div >\n        <div >\n          <li key={index} className=\"list-group-item clearfix\">\n            {data.name}  <button onClick={(e) => this.deleteContact(e, index)} className=\"btn btn-danger\">\n            Remove\n          </button>\n          </li>\n         \n        </div>\n        {/* <div className=\"col-md-11\"> */}\n          {/* <button onClick={(e) => this.deleteContact(e, index)} className=\"btn btn-danger\">\n            Remove\n          </button> */}\n        {/* </div> */}\n        \n    </div> \n    </div>\n    )\n  }\n\n  deleteContact(e, index){\n    e.preventDefault();\n    this.props.deleteContact(index);\n  }\n\n  render() {\n\n    return(\n      <div className=\"container\">\n        <h1> Contacts Application</h1>\n        <hr />\n        <div>\n\n          <h3>Add Contact Form</h3>\n         \n          <Contact props={this.props} /> \n          \n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    contacts: state.contacts\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createContact: contact => dispatch(contactAction.createContact(contact)),\n    deleteContact: index =>dispatch(contactAction.deleteContact(index))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}